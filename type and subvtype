<script>
    $(document).ready(function () {
        let typeMap = {};
        let subTypeMap = {};

        function showLoader() {
            $("#loader").css("display", "block");
        }
        
        function hideLoader() {
            $("#loader").css("display", "none");
        }

        getTypeList();
        
        function getTypeList(){
            commongetmethod(configOptions.servicebaseurl+"vendor/fetchgrievancetypes").then((response) => {
                console.log(response);
                let optionHtml ='<option value="">--Select--</option>';
                response.data.forEach(item => {
                    typeMap[item.typeId] = item.type;
                    optionHtml+= `<option value="${item.typeId}">${item.type}</option>`;
                });
                $("#serviceType").html(optionHtml);
            })
            .fail((xhr, status) => {
                if (xhr.status == '401') {
                    refreshToken().then((res) => {
                        console.log(res);
                        setSessionStorageItems(res);
                    });
                } else {
                    alert("some internal error occurred");
                }
            });
        }

        function getSubTypeList(typeId){
            console.log("Type ID: " + typeId);
            commongetmethod(configOptions.servicebaseurl+"vendor/fetchgrievancesubtypes/"+typeId).then((response) => {
                console.log("Response: " + response);
                let optionHtml ='<option value="">--Select--</option>';
                response.data.forEach(item => {
                    subTypeMap[item.subTypeId] = item.subType;
                    optionHtml+= `<option value="${item.subTypeId}">${item.subType}</option>`;
                });
                $("#subSubServicetype").html(optionHtml);
            })
            .fail((xhr, status) => {
                if (xhr.status == '401') {
                    refreshToken().then((res) => {
                        console.log(res);
                        setSessionStorageItems(res);
                    });
                } else {
                    alert("some internal error occurred");
                }
            });
        }

        $('#serviceType').on('change', function() {
            if($('#serviceType').val() != ""){
                getSubTypeList($('#serviceType').val());
            }
        });

        $("#dateForm").on("submit", function (e) {
            e.preventDefault();
            showLoader();

            const fromDate = $("#fromDate").val();
            const toDate = $("#toDate").val();
            const ServiceType = $("#serviceType").val();
            const SubServicetype = $("#subSubServicetype").val();

            const requestData = {
                fromInput: fromDate,
                toInput: toDate,
                channelType: 'Y',
                complaintTypeInput: ServiceType,
                complaintSubTypeInput: SubServicetype,
            };

            console.log("Request Data:", requestData);

            $.ajax({
                url: "http://203.176.113.183/rmmis/rmmisapi/reportapi/DrillRecvReport",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify(requestData),
                beforeSend: function (xhr) {
                    xhr.setRequestHeader(
                        "Authorization",
                        "Basic " + btoa("externaluser" + ":" + "m@d@dadm1n")
                    );
                },
                success: function (data) {
                    console.log("API Response:", data);

                    if (!Array.isArray(data.result) || data.result.length === 0) {
                        alert("No data found for the given criteria.");
                        hideLoader();
                        return;
                    }

                    const tableBody = $("#dataTable tbody");
                    tableBody.empty();

                    data.result.forEach(function (item) {
                        const row = `<tr>
                                        <td>${item.complaintRefNo}</td>
                                        <td>${item.createdOn}</td>
                                        <td>${item.finalStatus}</td>
                                        <td>${item.modifiedOn}</td>
                                        <td>${item.avgcDiff}</td>
                                        <td>${item.complaintMode}</td>
                                        <td>${item.trainStation}</td>
                                        <td>${typeMap[ServiceType]}</td>
                                        <td>${subTypeMap[SubServicetype]}</td>
                                        <td>${item.zoneCode}</td>
                                        <td>${item.divCode}</td>
                                        <td>${item.ownZoneCode}</td>
                                        <td>${item.contactId}</td>
                                        <td>${item.trainNameForReport}</td>
                                        <td>${item.pnrUtsNo}</td>
                                        <td>${item.complaintDesc}</td>
                                        <td>${item.remarks}</td>
                                        <td>${item.rating}</td>
                                        <td>${item.coachOwningRly}</td>
                                        <td>${item.userMobile}</td>
                                        <td>${item.userId}</td>
                                        <td>${item.physicalCoachNo}</td>
                                        <td>${item.atrremark}</td>
                                        <td>${item.deptCode}</td>
                                        <td>${item.sla}</td>
                                        <td>${item.diff}</td>
                                        <td>${item.ownDivCode}</td>
                                        <td>${item.commodity}</td>
                                        <td>${item.forwarded}</td>
                                        <td>${item.coachType}</td>
                                        <td>${item.coachNo}</td>
                                        <td>${item.nextStation}</td>
                                    </tr>`;
                        tableBody.append(row);
                    });

                    hideLoader();

                    if ($.fn.DataTable.isDataTable("#dataTable")) {
                        $("#dataTable").DataTable().clear().destroy();
                    }
                    $("#dataTable").DataTable({
                        order: [[0, "asc"]],
                    });
                },
                error: function (error) {
                    hideLoader();
                    console.error("Error fetching data", error);
                    alert("An error occurred while fetching data. Please try again.");
                },
            });
        }); 
    });
</script>
